{"version":3,"sources":["Results.js","App.js","reportWebVitals.js","index.js"],"names":["Results","title","publishedAt","urlToImage","description","url","author","className","placeholder","type","src","alt","style","float","href","App","useState","results","setResults","useEffect","getResults","a","fetch","response","json","data","articles","console","log","map","combinedKey","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA+EeA,EA1EC,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,MAAMC,EAAqD,EAArDA,YAAYC,EAAyC,EAAzCA,WAAWC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,OAS7D,OACI,qBAAKC,UAAU,MAAf,SACF,wBAAQA,UAAU,aAAlB,SACA,sBAAKA,UAAU,iBAAf,UACA,qBAAKA,UAAU,aAAf,SACE,uBAAMA,UAAU,cAAhB,UACI,uBAAOA,UAAU,mBAAmBC,YAAY,SAASC,KAAK,SAE9D,wBAAQF,UAAU,aAAaE,KAAK,SAApC,yBAGV,sBAAKF,UAAU,UAAf,UACE,qBAAKG,IAAKP,EAAYQ,IAAI,KAC1B,qBAAKC,MAnBU,CACfC,MAAM,QAkBN,SAAuBP,IACvB,qBAAKM,MAjBS,CAChBC,MAAM,SAgBJ,SAAwBX,IACxB,6BAAKD,IACL,4BAAIG,IAEJ,mBAAGU,KAAMT,EAAT,SAAc,wBAAQE,UAAU,WAAlB,4BAEhB,sBAAKA,UAAU,UAAf,UACE,2CACA,+BACE,+CACA,+CACA,iDACA,gDACA,gDACA,qDAGJ,sBAAKA,UAAU,WAAf,UACC,qBAAKG,IAAKP,EAAYQ,IAAI,KAC1B,8BAAML,IACN,6BAAKL,IACL,8BAAMC,IACN,mBAAGY,KAAMT,EAAT,SAAc,wBAAQE,UAAU,mBAAlB,4BAEf,sBAAKA,UAAU,WAAf,UACA,qBAAKG,IAAKP,EAAYQ,IAAI,KACzB,8BAAML,IACN,6BAAKL,IACL,8BAAMC,IACN,mBAAGY,KAAMT,EAAT,SAAc,wBAAQE,UAAU,mBAAlB,4BAEf,sBAAKA,UAAU,WAAf,UACA,qBAAKG,IAAKP,EAAYQ,IAAI,KACzB,8BAAML,IACN,6BAAKL,IACL,8BAAMC,IACN,mBAAGY,KAAMT,EAAT,SAAc,wBAAQE,UAAU,mBAAlB,4BAEf,sBAAKA,UAAU,WAAf,UACA,qBAAKG,IAAKP,EAAYQ,IAAI,KACzB,8BAAML,IACN,6BAAKL,IACL,8BAAMC,IACN,mBAAGY,KAAMT,EAAT,SAAc,wBAAQE,UAAU,mBAAlB,oCChCFQ,MAlCf,WAIE,IAJa,EAQeC,mBAAS,IARxB,mBAQRC,EARQ,KAQCC,EARD,KAWfC,qBAAU,WACRC,MAEC,IAIH,IAAMA,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,4DAAD,OAfZ,qCAcC,cACXC,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBP,EAAWO,EAAKC,UAChBC,QAAQC,IAAIH,EAAKC,UAJA,2CAAH,qDAMd,OACF,qBAAKnB,UAAU,MAAf,SACCU,EAAQY,KAAI,SAAAZ,GAAO,OAClB,cAAC,EAAD,eACIA,GADUA,EAAQa,mBCpBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f22b369.chunk.js","sourcesContent":["// map through component and output in component\n\nimport React from 'react';\n\n\nconst Results = ({title,publishedAt,urlToImage,description, url, author}) => {\n\n      // Custom css classes\n  const leftText = {\n    float:'left'\n}\nconst rightText = {\n  float:'right'\n}\n    return(\n        <div className=\"App\">\n      <header className=\"App-header\">\n      <div className=\"grid-container\">\n      <div className=\"search-bar\">\n        <form className=\"search-form\">\n            <input className=\"search-bar-input\" placeholder=\"Search\" type=\"text\"/>\n            \n            <button className=\"search-btn\" type=\"submit\">Search</button>\n          </form>\n    </div>\n  <div className=\"content\">\n    <img src={urlToImage} alt=\"\"/>\n    <sub style={leftText}>{author}</sub>\n    <sub style={rightText}>{publishedAt}</sub>\n    <h3>{title}</h3>\n    <p>{description}\n    </p>\n    <a href={url}><button className=\"read-btn\">READ MORE</button></a>\n  </div>\n  <div className=\"sidebar\">\n    <h3>PUBLISHER</h3> \n    <ul>\n      <li>PUBLISHER ONE</li>\n      <li>PUBLISHER TWO</li>\n      <li>PUBLISHER THREE</li>\n      <li>PUBLISHER FOUR</li>\n      <li>PUBLISHER FIVE</li>\n      <li>PUBLISHER SIX</li>\n    </ul>\n  </div>\n  <div className=\"content2\">   \n   <img src={urlToImage} alt=\"\"/>\n   <sub>{author}</sub>\n   <h3>{title}</h3>\n   <sub>{publishedAt}</sub>\n   <a href={url}><button className=\"read-btn-outline\">READ MORE</button></a>\n  </div>\n  <div className=\"content3\">\n  <img src={urlToImage} alt=\"\"/>\n   <sub>{author}</sub>\n   <h3>{title}</h3>\n   <sub>{publishedAt}</sub>\n   <a href={url}><button className=\"read-btn-outline\">READ MORE</button></a>\n  </div>\n  <div className=\"content4\"> \n  <img src={urlToImage} alt=\"\"/>\n   <sub>{author}</sub>\n   <h3>{title}</h3>\n   <sub>{publishedAt}</sub>\n   <a href={url}><button className=\"read-btn-outline\">READ MORE</button></a>\n  </div>\n  <div className=\"content5\">\n  <img src={urlToImage} alt=\"\"/>\n   <sub>{author}</sub>\n   <h3>{title}</h3>\n   <sub>{publishedAt}</sub>\n   <a href={url}><button className=\"read-btn-outline\">READ MORE</button></a>\n  </div>\n</div>\n</header>\n    </div>\n    )\n}\n\nexport default Results;","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport Results from './Results.js'\n\n\nfunction App() {\n\n\n// Authentification request\n  const API_KEY = \"8739af1f54704288a7bb206d263cbb2c\";\n\n\n//set useState to data return from api, set to an array [] of obj \nconst [results, setResults] = useState([]);\n\n// need to add getResults to useEffect in order for it to run\nuseEffect(() => {\n  getResults()\n  \n}, []);\n\n// getResults Request from api that makes async calls and awaits response and stores it in the data file \n// add await for data that returns from external source\nconst getResults = async () => {\n  const response = await fetch(`https://newsapi.org/v2/everything?domains=wsj.com&apiKey=${API_KEY}`)\n  const data = await response.json();\n  setResults(data.articles);\n  console.log(data.articles);\n}\n  return (\n<div className=\"App\">\n{results.map(results =>(\n  <Results key={results.combinedKey}\n  {...results}/>\n))}\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}